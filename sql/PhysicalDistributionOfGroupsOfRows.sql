WITH T0 AS(
SELECT /*+ PARALLEL(t 4)*/ DISTINCT
G_R_O_U_P__B_Y,SUBSTR(ROWIDTOCHAR(ROWID),7,3)RDF,
SUBSTR(ROWIDTOCHAR(ROWID),10,6)RDB
FROM T_A_B_L_E t
),T1 AS(
SELECT G_R_O_U_P__B_Y,RDF,
SUBSTR(RDB,1,1)B1,SUBSTR(RDB,2,1)B2,SUBSTR(RDB,3,1)B3,
SUBSTR(RDB,4,1)B4,SUBSTR(RDB,5,1)B5,SUBSTR(RDB,6,1)B6
FROM T0
),T2 AS(
SELECT G_R_O_U_P__B_Y,RDF,
CASE WHEN B1 BETWEEN 'A' AND 'Z' THEN ASCII(B1)-65 WHEN B1 BETWEEN 'a' AND 'z' THEN ASCII(B1)-97+26
WHEN B1 BETWEEN '0' AND '9' THEN ASCII(B1)-48+52 WHEN B1='+' THEN 62 WHEN B1='/' THEN 63 END *64*64*64*64*64 +
CASE WHEN B2 BETWEEN 'A' AND 'Z' THEN ASCII(B2)-65 WHEN B2 BETWEEN 'a' AND 'z' THEN ASCII(B2)-97+26
WHEN B2 BETWEEN '0' AND '9' THEN ASCII(B2)-48+52 WHEN B2='+' THEN 62 WHEN B2='/' THEN 63 END *64*64*64*64 +
CASE WHEN B3 BETWEEN 'A' AND 'Z' THEN ASCII(B3)-65 WHEN B3 BETWEEN 'a' AND 'z' THEN ASCII(B3)-97+26
WHEN B3 BETWEEN '0' AND '9' THEN ASCII(B3)-48+52 WHEN B3='+' THEN 62 WHEN B3='/' THEN 63 END *64*64*64 +
CASE WHEN B4 BETWEEN 'A' AND 'Z' THEN ASCII(B4)-65 WHEN B4 BETWEEN 'a' AND 'z' THEN ASCII(B4)-97+26
WHEN B4 BETWEEN '0' AND '9' THEN ASCII(B4)-48+52 WHEN B4='+' THEN 62 WHEN B4='/' THEN 63 END *64*64 +
CASE WHEN B5 BETWEEN 'A' AND 'Z' THEN ASCII(B5)-65 WHEN B5 BETWEEN 'a' AND 'z' THEN ASCII(B5)-97+26
WHEN B5 BETWEEN '0' AND '9' THEN ASCII(B5)-48+52 WHEN B5='+' THEN 62 WHEN B5='/' THEN 63 END *64 +
CASE WHEN B6 BETWEEN 'A' AND 'Z' THEN ASCII(B6)-65 WHEN B6 BETWEEN 'a' AND 'z' THEN ASCII(B6)-97+26
WHEN B6 BETWEEN '0' AND '9' THEN ASCII(B6)-48+52 WHEN B6='+' THEN 62 WHEN B6='/' THEN 63 END RDB
FROM T1
),T3 AS(
SELECT G_R_O_U_P__B_Y,RDF,RDB,
LAG(RDB,1,0)OVER(PARTITION BY G_R_O_U_P__B_Y,RDF ORDER BY RDB)RDBP
FROM T2
)
SELECT COUNT(*)GBL,
MIN(BLOCKS)BLOCKS_PER_GROUP_MIN,MAX(BLOCKS)BLOCKS_PER_GROUP_MAX,ROUND(AVG(BLOCKS),2)BLOCKS_PER_GROUP_AVG,
ROUND(STDDEV(BLOCKS),2)BLOCKS_PER_GROUP_STDDEV,MIN(RANGES)RANGES_PER_GROUP_MIN,MAX(RANGES)RANGES_PER_GROUP_MAX,ROUND(AVG(RANGES),2)RANGES_PER_GROUP_AVG,
ROUND(STDDEV(RANGES),2) RANGES_PER_GROUP_STDDEV
FROM(
SELECT G_R_O_U_P__B_Y,COUNT(DISTINCT RDF||';'||TRIM(TO_CHAR(RDB)))BLOCKS,
SUM(CASE WHEN RDB<>RDBP+1 THEN 1 END)RANGES
FROM T3
GROUP BY G_R_O_U_P__B_Y
)